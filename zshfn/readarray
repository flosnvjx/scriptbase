## readarray [options] [--|-] [param]
## options sort by priority:
## -s, treat each delimiter as an element separator, i.e. do not errout with 5 on value that does not ending with a delimiter
## -t, delimiter
readarray() {
  local -A __readarray_g_e_t_o_p_t_s
  builtin zparseopts -A __readarray_g_e_t_o_p_t_s -D -F - s t: || return $?
  if [[ $# -gt 1 ]]; then return 1; fi
  local +x __readarray_delim='\n'
  if [[ -v __readarray_g_e_t_o_p_t_s[-t] ]]; then
    if [[ "${__readarray_g_e_t_o_p_t_s[-t]}" == *''* ]]; then
      return 1
    fi
    __readarray_delim=${__readarray_g_e_t_o_p_t_s[-t]}
  fi
  if [[ "${(Pt)${1:-replies}}" == association* ]]; then return 1; fi

  local +x -i __readarray_e_r_r_n_o=
  local +x __readarray_r_e_a_d_e_o_f=
  readeof __readarray_r_e_a_d_e_o_f || return $?

  if [[ ${#__readarray_r_e_a_d_e_o_f} -eq 0 ]]; then

    local -a __readarray_r_e_a_d_e_o_f=()
    if ! [[ -v __readarray_g_e_t_o_p_t_s[-s] ]]; then
      __readarray_e_r_r_n_o=5
    fi

  else

    eval 'local -a __readarray_r_e_a_d_e_o_f=("${(@ps'$__readarray_delim')__readarray_r_e_a_d_e_o_f}")'

    if [[ ! -v __readarray_g_e_t_o_p_t_s[-s] ]]; then
      if [[ ${#__readarray_r_e_a_d_e_o_f} -gt 1 ]] && [[ "${__readarray_r_e_a_d_e_o_f[-1]}" == "" ]]; then
        __readarray_r_e_a_d_e_o_f=("${(@)__readarray_r_e_a_d_e_o_f[1,-2]}")
      else
        __readarray_e_r_r_n_o=5
      fi
    fi

  fi

  set -A ${1:-replies} "${(@)__readarray_r_e_a_d_e_o_f}" || return $?
  return $__readarray_e_r_r_n_o
}
builtin zmodload -Fa zsh/zutil b:zparseopts
