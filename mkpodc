#!/usr/bin/env -S bash --noprofile --norc -eo pipefail --
if ! command -v cpio >/dev/null; then
  >&2 '%s\n' "[${0##*/}] missing dependency: cpio"
fi

testargv() {
  local -a dirs files badones ## symlink determined by target ftype
  while [ $# -ne 0 ]; do
    local +x ifok=0
    if [[ ! -e "$1" ]]; then
      :
    elif [[ -d "$1" && -r "$1" && -x "$1" ]]; then
      dirs+=("$1") ifok=1
    elif [[ -f "$1" && -r "$1" ]]; then
      files+=("$1") ifok=1
    elif [[ -L "$1" ]]; then
      local +x symtype=.
      if stat -Lc %A -- "$1" | read -r -- symtype; then
        if [[ "${symtype:0:1}" == '-' ]] || \
           [[ "${symtype:0:1}" == d ]]; then
          files+=("$1") ifok=1
        fi
      fi
    fi
    if [ "$ifok" -ne 1 ]; then
      badones+=("$1")
      >&2 printf '[%s] must be a reachable directory or file: `%q`\n' "${0##*/}" "$1"
    fi
    shift
  done
  if [ ${#badones[@]} -ne 0 ]; then
    return 1
  else
    {
    if [[ ${#dirs} -ne 0 ]]; then
      printf '%s\0' "${dirs[@]}" | find -files0-from - \( -type f -o \( -type l \( -xtype f -o -xtype d \) \) \) -print0
    fi; if [[ ${#files} -ne 0 ]]; then
      printf '%s\0' "${files[@]}"
    fi
    } | sed -ze 's%^./\+%%' | LC_ALL=C sort -zu | cpio -o0cC1R+0:+0 --reproducible --quiet
  fi
}

printusage() {
  >&2 printf '%s\n' "usage: ${0##*/} pathnames | ..."
}

if [ $# -ne 0 ]; then
  testargv "$@"
else
  printusage
  false
fi
